
    # Sessions
    mysql_sessions = mysql.query(ChatSession).filter(ChatSession.log_id==log.id)
    redis_sessions = redis.hgetall('chat.'+chat_url+'.counters')
    # Update the sessions which are already in the database.
    for mysql_session in mysql_sessions:
        redis_session = redis.hgetall('session.'+mysql_session.session_id+'.chat.'+chat_url)
        redis_session_meta = redis.hgetall('session.'+mysql_session.session_id+'.meta.'+chat_url)
        # Delete the session from mysql if it's been deleted from redis.
        if len(redis_session)==0 or len(redis_session_meta)==0:
            mysql.delete(mysql_session)
            continue
        expiry_time = datetime.datetime.fromtimestamp(
            redis.zscore('chat-sessions', chat_url+'/'+mysql_session.session_id) or 0
        )
        mysql_session.expiry_time = expiry_time
        mysql_session.group = redis_session_meta['group']
        mysql_session.name = redis_session['name'][:100]
        mysql_session.acronym = redis_session['acronym'][:15]
        mysql_session.color = redis_session['color'][:6]
        mysql_session.case = redis_session['case']
        mysql_session.replacements = redis_session['replacements']
        # XXX NEED TO UNCOMMENT THESE WHEN WE MERGE NEW QUIRKS
        #mysql_session.regexes = redis_session['regexes']
        mysql_session.quirk_prefix = redis_session['quirk_prefix'][:50]
        #mysql_session.quirk_suffix = redis_session['quirk_suffix'][:50]
        del redis_sessions[str(mysql_session.counter)]
    # And create the ones which aren't.
    for counter, session_id in redis_sessions.items():
        redis_session = redis.hgetall('session.'+session_id+'.chat.'+chat_url)
        redis_session_meta = redis.hgetall('session.'+session_id+'.meta.'+chat_url)
        # Sometimes the counter list contains sessions that have already been deleted.
        # If this is one of them, skip it.
        if len(redis_session)==0 or len(redis_session_meta)==0:
            continue
        expiry_time = datetime.datetime.fromtimestamp(
            redis.zscore('chat-sessions', chat_url+'/'+session_id) or 0
        )
        mysql_session = ChatSession(
            log_id=log.id,
            session_id=session_id,
            counter=counter,
            expiry_time=expiry_time,
            group=redis_session_meta['group'],
            name=redis_session['name'][:100],
            acronym=redis_session['acronym'][:15],
            color=redis_session['color'][:6],
            case=redis_session['case'],
            replacements=redis_session['replacements'],
            # XXX NEED TO UNCOMMENT THESE WHEN WE MERGE NEW QUIRKS
            #regexes=redis_session['regexes'],
            quirk_prefix=redis_session['quirk_prefix'][:50],
            #quirk_suffix=redis_session['quirk_suffix'],
        )
        mysql.add(mysql_session)
    mysql.flush()